version: 1
type: view
name: people_pulse_ticket
model_name: peoplepulse_model
sql_table_name: DEMO.DEMO_PROD_PEOPLE_PULSE.PEOPLE_PULSE_TICKET
identifiers:
- name: ticket_id
  type: primary
  sql: ${ticket_id}
- name: creator_id
  type: foreign
  sql: ${creator_id}
- name: assignee_id
  type: foreign
  sql: ${assignee_id}
fields:
- name: ticket_id
  field_type: dimension
  type: number
  sql: ${TABLE}."TICKET_ID"

- name: creator_id
  field_type: dimension
  type: number
  sql: ${TABLE}."CREATOR_ID"

- name: assignee_id
  field_type: dimension
  type: number
  sql: ${TABLE}."ASSIGNEE_ID"

- name: resolution_time
  field_type: dimension
  type: number
  sql: ${TABLE}."RESOLUTION_TIME"

- name: customer_satisfaction_score
  field_type: dimension
  type: number
  sql: ${TABLE}."CUSTOMER_SATISFACTION_SCORE"

- name: issue_type
  field_type: dimension
  type: string
  sql: ${TABLE}."ISSUE_TYPE"
  searchable: true

- name: ticket_count
  field_type: measure
  type: count
  description: The number of support tickets opened in Zendesk
  sql: ${ticket_id}

- name: average_satisfaction_score
  field_type: measure
  type: average
  description: The average customer satisfaction with the support experience
  sql: ${customer_satisfaction_score}

- name: average_resolution_time
  field_type: measure
  type: average
  description: The average time it took to resolve a ticket in minutes 
  sql: ${resolution_time}

# To help you get started with defining fields, we've included a quick guide which you can delete at any time.
# The following keys are required for all fields. All the fields above have been created based on the columns
# in your table.

# - name: (Required) Name of the field. This is used to reference the field in the data model.
#   field_type: The type of field. This can be 'dimension', 'measure', or 'dimension_group'.
#   type: This is the data type for a field.
#         For dimensions, this can be: string, yesno, tier, number
#         For measures, this is an aggregation type: number, sum, average, count, count_distinct
#         For dimension groups this can be: time, duration
#   sql: (Required) This is the SQL expression for the field. You can reference other fields in the table by
#        using the `name` of the field. For example, if you have a field with name: 'revenue' in the view
#        'orders', you can reference it as: ${orders.revenue}.
#        For more information, see https://docs.zenlytic.com/docs/data_modeling/
#

# The following keys are optional but useful for providing additional context to the field in the UI and Zoe.
#
#   label: The is the user-facing label for the field, displayed in the UI and used by Zoe in chat.
#          It's different from the `name` field, which is used for referencing the field in the data model.
#
#   description: This is used to provide context to users about the field.
#
#   searchable: This allows Zenlytic to index the categories and allows Zoe to properly use filters.
#               For example, if you have a field called 'state' and you want to be able to filter
#               on different states, you would set this to 'yes'.
#
#   zoe_description: This is used to provide context to Zoe about the field.
#                    When this is not provided, Zoe will use the description field.
#
#   hidden: This is used to hide the field from both the UI and Zoe. By default, this is set to 'no'.
#
#   value_format_name: This is the format to use when displaying the field. Follow this link to see the
#                      available formats. https://docs.zenlytic.com/docs/data_modeling/formatting
#
#   synonyms: This is a list of strings that act as synonyms for the field label.
#
#   filters: This is a list of filters that can be applied to the field.
#
# For a comprehensive list of options that can be specified for a field, or for more detailed information,
# please visit: https://docs.zenlytic.com/docs/data_modeling/data_modeling
